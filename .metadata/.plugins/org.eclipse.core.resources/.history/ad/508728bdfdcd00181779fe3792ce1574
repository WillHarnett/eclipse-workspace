package com.babbelapps.babbleapps_mobileautomation;

import java.awt.GridLayout;

import javax.swing.*;

public class CapabilitiesPrompt {
	public boolean capabilitiesPrompt() {
		
		boolean carryOutTests = true;
		String deviceName = "";
		String udid = "";
		String bubndleID = "";
		String appLocation = "";
		
        JCheckBox emulatorCheckBox = new JCheckBox("Emulator", true);  
        JCheckBox connectedDeviceCheckBox = new JCheckBox("Connceted Device");
        JCheckBox useDefaultsCheckBox = new JCheckBox("Use Default Values", true);  
		
        String[] platformTypes = {"iOS", "Android"};
        JComboBox platformTypesCombo = new JComboBox(platformTypes);
        platformTypesCombo.setSelectedItem("iOS");
        
        String[] automationNames = {"XCUITest"};
        JComboBox automationNamesTypeCombo = new JComboBox(automationNames);
        automationNamesTypeCombo.setSelectedItem("XCUITest");
        
        JTextField deviceNameTextField = new JTextField(deviceName);
        JTextField udidTextField = new JTextField(udid);
        JTextField bundleIDTextField = new JTextField(bubndleID);
        JTextField appLocationTextField = new JTextField(appLocation);
        
        
        
        JPanel panel = new JPanel(new GridLayout(0, 2));
        
        panel.add(new JLabel("Use Emulator"));
        panel.add(emulatorCheckBox);
        panel.add(new JLabel("Use Connected Device"));
        panel.add(connectedDeviceCheckBox);
        panel.add(new JLabel("Use Default Values"));
        panel.add(useDefaultsCheckBox);
        
        panel.add(new JLabel("Platform type"));
        panel.add(platformTypesCombo);
        panel.add(new JLabel("Automation Name"));
        panel.add(automationNamesTypeCombo);
        panel.add(new JLabel("Device Name"));
        panel.add(deviceNameTextField);
        panel.add(new JLabel("UDID:"));
        panel.add(udidTextField);
        panel.add(new JLabel("Bundle ID:"));
        panel.add(bundleIDTextField);
        panel.add(new JLabel("App Location:"));
        panel.add(appLocationTextField);
        
        udidTextField.setEnabled( false );
        
        //Use Emulator
        //Use Connected Device
        //Use defaults
        /*
        capabilities.setCapability("app", "/Users/will/Library/Developer/Xcode/DerivedData/my-recipes-crtvqzctkhijyjasxblostthzsjw/Build/Products/Release-iphonesimulator/my-recipes.app"); //Required
        deviceName = "iPhone SE";
        udid = "F3B8EAE6-33D7-4850-93C5-7AC240949619";
	}
	else {
		udid = "4958ddfbc1831b6cd046819a90890badf6716777";
		deviceName = "Willâ€™s iPhone";
		capabilities.setCapability("bundleId", bundleId);
		*/
		//capabilities.setCapability("xcodeOrgId", "<Team ID>"); //Required
		//capabilities.setCapability("xcodeSigningId", "iPhone Developer");
        
        int result = JOptionPane.showConfirmDialog(null, panel, "Test",
            JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
        if (result == JOptionPane.OK_OPTION) {
        	/*
            System.out.println(combo.getSelectedItem()
                + " " + field1.getText()
                + " " + field2.getText());
            */
        } else {
        	carryOutTests = false;
            System.out.println("Cancelled");
        }
	    
        return carryOutTests;
	}
}